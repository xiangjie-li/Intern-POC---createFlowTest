<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">
	<flow name="POST_connection_config_producer_producerName" doc:id="d478bb93-2bfe-4a0b-9c42-5178b4f4500c" >
		<http:listener doc:name="/connection/config/producer/{producerName}" doc:id="7a5c83db-ecce-4768-a8d0-4166585b9003" config-ref="HTTP_Listener_config" path="/connection/config/producer/{producerName}" allowedMethods="POST"/>
		<set-variable value="#[attributes.uriParams.producerName]" doc:name="Set producerName as Variable" doc:id="d715525c-4ed8-4023-8350-dac29220b4c2" variableName="producerName"/>
		<ee:transform doc:name="Transform Form Data to JSON Document" doc:id="978d393e-98b4-40f5-b64f-5c554d582090" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

fun getJson(payload) = {
	mapping: payload.parts mapObject (value,key) -> {
		(key) : value.content
	}
}

---

{
	"userId": payload.userId,
	"type": payload."type",
	"name": vars.producerName,
	"config": payload.config
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-and-update-document collectionName="connection" doc:name="Find one and update document" doc:id="dd03d77d-6bcc-485f-8365-fad9978f0e6e" config-ref="MongoDB_Config" upsert="true">
			<mongo:find-query ><![CDATA[#[{  
	userId: payload.userId,
	name: payload.name,
	"type": "producer"
}]]]></mongo:find-query>
			<mongo:content-to-update ><![CDATA[#[payload]]]></mongo:content-to-update>
		</mongo:find-one-and-update-document>
	</flow>
	<flow name="GET_connection_config_producer_producerName" doc:id="e60f527e-bb7f-4645-bb33-fe3c01181682" >
		<http:listener doc:name="/connection/config/producer/{producerName}" doc:id="9df9fd33-f0ed-4fff-bc55-0c5344fe8ac4" config-ref="HTTP_Listener_config" path="/connection/config/producer/{producerName}" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Query Item to JSON" doc:id="94dd61d5-2ad5-47e9-8dc9-e0a1c82f9558" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"name": attributes.uriParams.producerName
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-document collectionName="connection" doc:name="Find one document" doc:id="66124539-ef58-4db4-a0ea-75b0202012fd" config-ref="MongoDB_Config">
			<mongo:find-query ><![CDATA[#[{
	name: payload.name,
	userId: "jack",
	"type": "producer"
}]]]></mongo:find-query>
		</mongo:find-one-document>
	</flow>
	<flow name="GET_connection_configs_producer" doc:id="803551f4-930e-4dda-b602-1a7e21b31054" >
		<http:listener doc:name="/connection/configs/producer" doc:id="a1605b93-6fd3-4693-a44a-f2575595dd3e" config-ref="HTTP_Listener_config" path="/connection/configs/producer" allowedMethods="GET"/>
		<mongo:find-documents collectionName="connection" doc:name="Find documents" doc:id="8117b582-23be-40fb-b2b3-91a3f5b16d55" config-ref="MongoDB_Config" >
			<mongo:condition-query ><![CDATA[{
	userId: "jack",
	"type": "producer"
}]]></mongo:condition-query>
		</mongo:find-documents>
	</flow>
	<flow name="POST_connection_config_consumer_consumerName" doc:id="92fdab1b-2ac6-4960-a489-2d11a0dbd118" >
		<http:listener doc:name="/connection/config/consumer/{consumerName}" doc:id="9ab4421b-b654-4d56-8119-c347e79ddcc8" config-ref="HTTP_Listener_config" path="/connection/config/consumer/{consumerName}" allowedMethods="POST"/>
		<set-variable value="#[attributes.uriParams.consumerName]" doc:name="consumerName " doc:id="e62d1171-a4f5-4ead-a115-e6f95fe16a9b" variableName="consumerName" />
		<set-variable value="#[payload]" doc:name="config" doc:id="5d069a3d-179e-4c60-8faf-4dc6bccef34d" variableName="connection_config"/>
		<java:invoke-static doc:name="Invoke static" doc:id="d104c6b5-162e-44d8-b259-0be7b0099fc3" class="TokenGetter" method="TokenLoader(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
			<java:args ><![CDATA[#[%dw 2.0
output application/json

---

{
	"name": vars."connection_config"."name" as String,
	"userid": vars."connection_config".userId as String ++ vars."connection_config".name as String,
	"scope": vars."connection_config".config.scope as String,
	"tokenUrl": vars."connection_config".config.tokenUrl as String,
	"authorizeUrl": vars."connection_config".config.authorizeUrl as String,
	"clientId": vars.connection_config.config.clientId as String,
	"clientSecret": vars.connection_config.config.clientSecret as String
}]]]></java:args>
		</java:invoke-static>
		<ee:transform doc:name="Transform Form Data to JSON Document" doc:id="c6a7890e-a6ef-41b4-ac5a-ee0b265daaa9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

fun getJson(payload) = {
	mapping: payload.parts mapObject (value,key) -> {
		(key) : value.content
	}
}

---

{
	"userId": vars.connection_config.userId,
	"type": vars.connection_config."type",
	"name": vars.consumerName,
	"config": (vars.connection_config.config ++ {refreshToken : payload})
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-and-update-document collectionName="connection" doc:name="Find one and update document" doc:id="1010afff-7358-4419-8550-3b151952dd3f" config-ref="MongoDB_Config" upsert="true" >
			<mongo:find-query ><![CDATA[#[{  
	userId: payload.userId,
	name: payload.name,
	"type": "consumer"
}]]]></mongo:find-query>
			<mongo:content-to-update ><![CDATA[#[payload]]]></mongo:content-to-update>
		</mongo:find-one-and-update-document>
	</flow>
	<flow name="GET_connection_config_consumer_consumerName" doc:id="91e51fc4-e6be-4589-825e-f6fe29d32e24" >
		<http:listener doc:name="/connection/config/consumer/{consumerName}" doc:id="7be9cdfc-6d54-4303-85bc-2334dd252bcb" config-ref="HTTP_Listener_config" path="/connection/config/consumer/{consumerName}" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Query Item to JSON" doc:id="c3080019-a4e2-48ca-80de-5c907b4482c3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"name": attributes.uriParams.consumerName
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-document collectionName="connection" doc:name="Find one document" doc:id="3c4400c0-6389-4e87-8d56-43ecebbad0c1" config-ref="MongoDB_Config" >
			<mongo:find-query ><![CDATA[#[{
	name: payload.name,
	userId: "jack",
	"type": "consumer"
}]]]></mongo:find-query>
		</mongo:find-one-document>
	</flow>
	<flow name="GET_connection_configs_consumer" doc:id="1907a006-9a5a-4aeb-aa1f-501f850e86ba" >
		<http:listener doc:name="Listener" doc:id="766e7049-855b-4e1d-ad98-9127699f49b7" config-ref="HTTP_Listener_config" path="/connection/configs/consumer" allowedMethods="GET"/>
		<mongo:find-documents collectionName="connection" doc:name="Find documents" doc:id="9c933024-42df-4887-89db-1e9517a16ed7" config-ref="MongoDB_Config" >
			<mongo:condition-query ><![CDATA[{
	userId: "jack",
	"type": "consumer"
}]]></mongo:condition-query>
		</mongo:find-documents>
	</flow>
</mule>
