<?xml version="1.0" encoding="UTF-8"?>


<mule xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth" xmlns:shop-products-categories-connector="http://www.mulesoft.org/schema/mule/shop-products-categories-connector" xmlns:shopper-products="http://www.mulesoft.org/schema/mule/shopper-products" xmlns:ecom-mapping-api="http://www.mulesoft.org/schema/mule/ecom-mapping-api" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:spring="http://www.mulesoft.org/schema/mule/spring" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/spring http://www.mulesoft.org/schema/mule/spring/current/mule-spring.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/shop-products-categories-connector http://www.mulesoft.org/schema/mule/shop-products-categories-connector/current/mule-shop-products-categories-connector.xsd
http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd">
	
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="47bcf15d-41e6-4145-bf88-95a666e94163">
		<http:listener-connection host="0.0.0.0" port="8081"/>
		<http:listener-interceptors >
			<http:cors-interceptor >
				<http:origins >
					<http:origin url="http://localhost:3001" accessControlMaxAge="30000" >
						<http:allowed-methods >
							<http:method methodName="GET" />
							<http:method methodName="POST" />
						</http:allowed-methods>
					</http:origin>
				</http:origins>
			</http:cors-interceptor>
		</http:listener-interceptors>
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="da65119a-4587-4e4d-a89b-8d0403df2144">
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration1" doc:name="HTTP Request configuration" doc:id="955ac1ad-c266-4fe9-bd9f-e52a6a540221">
		<http:request-connection protocol="HTTPS" port="443" />
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration2" doc:name="HTTP Request configuration" doc:id="16a17bf6-9986-4168-a3a1-8f8ede7bc866" >
		<http:request-connection protocol="HTTPS" host="https://www.googleapis.com" port="443" />
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration3" doc:name="HTTP Request configuration" doc:id="64a48b0c-a209-458b-92ed-8da121e3a07e" basePath="/producer_mapper">
		<http:request-connection host="${host}"/>
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration4" doc:name="HTTP Request configuration" doc:id="55904c7f-19f5-4362-9280-af39944cee56" basePath="/connection" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration5" doc:name="HTTP Request configuration" doc:id="4b1ba4b5-2dae-40bd-b1d6-5c4746cda635" basePath="/consumer_mapper">
		<http:request-connection host="${host}"/>
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration6" doc:name="HTTP Request configuration" doc:id="ccae7f26-f0a5-425c-bd41-57761a79bc97" basePath="/connection" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration7" doc:name="HTTP Request configuration" doc:id="d23a4f12-e780-4a47-a7bd-55f658e339f5">
		<http:request-connection protocol="HTTPS" port="443" >
			<http:authentication >
				<oauth:authorization-code-grant-type externalCallbackUrl="http://localhost:8081/facebookcallback" clientId="1236020366743614" clientSecret="b3e86d89909a85ff084c7db05f83d79e" tokenUrl="https://graph.facebook.com/v7.0/oauth/access_token" localCallbackConfigPath="/facebookcallback" localAuthorizationUrl="http://localhost:8081/login/facebook" authorizationUrl="https://www.facebook.com/v2.12/dialog/oauth" localCallbackConfig="HTTP_Listener_config"/>
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration8" doc:name="HTTP Request configuration" doc:id="09d0c92a-22db-416f-b42a-890c1fe4935e" >
		<http:request-connection protocol="HTTPS" port="443" >
			<http:authentication >
				<oauth:authorization-code-grant-type localCallbackConfig="HTTP_Listener_config" localCallbackConfigPath="/callback" externalCallbackUrl="http://localhost:8081/callback" localAuthorizationUrl="http://localhost:8081/login/google" authorizationUrl="https://accounts.google.com/o/oauth2/auth" clientId="581894069614-pdqergoj2bhvanqf3i1bk7o775tku56p.apps.googleusercontent.com" clientSecret="wvrsotfGze3z1Flly7uOOojA" scopes="https://www.googleapis.com/auth/content" tokenUrl="https://oauth2.googleapis.com/token"/>
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration9" doc:name="HTTP Request configuration" doc:id="c887ae2d-86c6-4976-aefd-e5a3d16ef0e1" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	
	<http:request-config name="HTTP_Request_configuration10" doc:name="HTTP Request configuration" doc:id="eaa1b76e-850c-46aa-95c1-e7f47de78770" >
		<http:request-connection protocol="HTTPS" port="443" />
	</http:request-config>
	<mongo:config name="MongoDB_Config" doc:name="MongoDB Config" doc:id="e436e1e0-af4c-4821-8b76-21295807cb31" >
		<mongo:connection-string-connection connectionString="mongodb+srv://jack:qpqEGoWDGHYWWNTT@poctest.sq81g.mongodb.net/db?retryWrites=true&amp;w=majority" />
	</mongo:config>
	<global-property doc:name="Global Property" doc:id="0f9f886e-1e52-4a3b-b3a2-0e5d75b2d380" name="env" value="dev" />
	<configuration-properties doc:name="Configuration properties" doc:id="973c1c00-57d6-4016-8576-87886d459ada" file="${env}.yaml" />
	<http:request-config name="no_host_request_config" doc:name="HTTP Request configuration" doc:id="cad42f46-febd-4a44-98f8-0717f3b0fc6c" />
	<flow name="produce_flow" doc:id="e0eab66f-62e5-4ea8-b108-ebbc2e2d26d4" initialState="started">
		<http:listener doc:name="Listener" doc:id="47bcf15d-41e6-4145-bf88-95a666e94163" config-ref="HTTP_Listener_config" path="/connection/produce" allowedMethods="GET"/>
		<mongo:find-one-document doc:name="Find one document" doc:id="882489d3-8814-4384-a794-d82c140c0bd0" config-ref="MongoDB_Config" collectionName="connection">
			<mongo:find-query><![CDATA[#[{
	"name": vars.routing_config."config".producer_connection.name,
	"type": "producer",
	"userId": vars.routing_config.userId
}]]]></mongo:find-query>
		</mongo:find-one-document>
		<set-variable value="#[payload]" doc:name="connection_config" doc:id="563d8d13-5001-403e-b7b6-1dc766200b0a" variableName="connection_config"/>
		<http:request method="POST" doc:name="RequestShopperJWT" doc:id="dd228f3a-d82f-48ae-9959-f5eb3ca16c6d" config-ref="no_host_request_config" url="#[vars.connection_config.config.tokenUrl]">
			<http:body><![CDATA[{
	"type": "guest"
}]]></http:body>
			<http:query-params><![CDATA[#[output application/json
---
{
	"client_id" : "6c957560-464f-4a98-ad0f-5e9662527e27"
}]]]></http:query-params>
		</http:request>
		<http:request method="GET" doc:name="OCAPI connector" doc:id="183ab826-0190-4c76-a138-5f3aa16db2c9" config-ref="no_host_request_config" url="#[vars.connection_config.config.url]">
			<http:headers><![CDATA[#[{
	"Authorization": attributes.headers.Authorization
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="9b4fd07a-dd22-43c6-b792-7dc25ea44efe" message="#[payload]" />
	</flow>
	<flow name="consume_flow" doc:id="54ea6086-3d0e-416c-9425-b0fd2a41e3b2" >
		<http:listener doc:name="Listener" doc:id="185e67a7-a936-411a-b0d0-5616a655ed95" config-ref="HTTP_Listener_config" path="/connection/consume" allowedMethods="POST"/>
		<set-variable value="#[payload]" doc:name="product data" doc:id="4a79b467-a3ca-4c56-b060-72627c393d89" variableName="product_data" />
		<mongo:find-one-document doc:name="Find one document" doc:id="4be2065c-a436-425a-a4dc-a9fe7df92f33" config-ref="MongoDB_Config" collectionName="connection">
			<mongo:find-query><![CDATA[#[{
	"name": vars.consumer_config.consumer_connection.name,
	"type": "consumer",
	"userId": vars.routing_config.userId
}]]]></mongo:find-query>
		</mongo:find-one-document>
		<set-variable value="#[payload]" doc:name="connection_config" doc:id="e8963af8-6644-407a-aea0-2a6d31a226cc" variableName="connection_config" />
		<java:invoke-static doc:name="Invoke getRefreshToken()" doc:id="b7b5cd0d-9164-4098-b2c8-2e6234152b07" class="TokenRefresher" method="getRefreshToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
			<java:args><![CDATA[#[%dw 2.0
output application/json

---

{
	"systemName": vars."connection_config"."name" as String,
	"refreshToken": vars."connection_config"."config"."refreshToken" as String,
	"tokenUrl": vars."connection_config"."config".tokenUrl as String,
	"clientId": vars.connection_config."config".clientId as String,
	"clientSecret": vars.connection_config."config".clientSecret as String
}]]]></java:args>
		</java:invoke-static>
		<http:request method="POST" doc:name="Request" doc:id="8cc90611-183d-4ab5-84a4-8d1350d467eb" config-ref="no_host_request_config" url="#[vars.connection_config.config.url]">
			<http:body><![CDATA[#[vars.product_data]]]></http:body>
			<http:headers><![CDATA[#[{
	"Authorization": "Bearer " ++ payload
}]]]></http:headers>
			<http:query-params ><![CDATA[#[{
	(if (vars.connection_config.config.APIKey != null) {
		"Key": vars.connection_config.config.APIKey
	}
	else {
		
	})
}]]]></http:query-params>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="357652f0-3bd6-4de7-8f35-7184d5bf88cf" message="#[payload]"/>
	</flow>
	<flow name="POST_routing_execute_configName" doc:id="59d0b3c0-a18b-45f5-accd-15d1f8eac6fd" initialState="started">
		<http:listener doc:name="Listener" doc:id="ce4f71f2-7788-4c88-9a51-a6ec89a7f6df" config-ref="HTTP_Listener_config" path="/routing/execute/{configName}" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Form Data to JSON Document" doc:id="9b5caa5b-a34c-41c3-8ddc-792cc492bcfa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"userId": "jack",
	"configName": attributes.uriParams.configName
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-document doc:name="Find one document" doc:id="79880d16-f772-4d36-84e9-d1cfecb75912" config-ref="MongoDB_Config" collectionName="routing">
			<mongo:find-query ><![CDATA[#[{
	configName: payload.configName,
	userId: payload.userId
}]]]></mongo:find-query>
		</mongo:find-one-document>
		<logger level="INFO" doc:name="Logger" doc:id="9ac270d8-2f5f-45d3-83fa-380bdc0417d3" message="#[payload]"/>
		<set-variable value="#[payload]" doc:name="routing_config" doc:id="2958c3f4-87e8-4ea1-8b0a-a25676c57943" variableName="routing_config" />
		<flow-ref doc:name="Reference to produce flow" doc:id="bee37b40-66ae-4f58-809d-afa944d0eda1" name="produce_flow"/>
		<logger level="INFO" doc:name="Logger" doc:id="d36502b0-59b0-406d-aad6-8b662e1fc68d" message="#[payload]"/>
		<http:request method="POST" doc:name="producer mapper" doc:id="873b5c03-5ff0-4192-b335-08a2412cfda8" config-ref="HTTP_Request_configuration3" path="/map/{producerName}/{configName}" >
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"configName" : vars.routing_config.config.producer_mapper.name,
	"producerName" : vars.routing_config.config.producer_connection.name
}]]]></http:uri-params>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="be9f7e93-56e8-45d0-a191-242a63740d6d" message="#[payload]"/>
		<set-variable value="#[payload]" doc:name="cdm_data" doc:id="0a406c49-1953-48dc-a7fb-4ca7455a219f" variableName="cdm_data"/>
		<foreach doc:name="For Each" doc:id="5ddc1bd9-144c-49b7-983d-1daf66a805fc" collection="#[vars.routing_config.config.consumers]">
			<set-variable value="#[payload]" doc:name="consumer_config" doc:id="7ccfca3b-6aa5-4247-8326-3c4cb05dffc7" variableName="consumer_config"/>
			<http:request method="POST" doc:name="consumer mapper" doc:id="381110a7-3236-4286-8e2b-12c69d79f03f" config-ref="HTTP_Request_configuration5" path="/map/{consumerName}/{configName}">
			<http:body ><![CDATA[#[vars.cdm_data]]]></http:body>
				<http:uri-params><![CDATA[#[output application/json
---
{
	"consumerName" : vars.consumer_config.consumer_connection.name,
	"configName" : vars.consumer_config.consumer_mapper.name
}]]]></http:uri-params>
		</http:request>
			<logger level="INFO" doc:name="Logger" doc:id="ddc313f8-caef-480b-a35d-087511ee34ba" message="#[payload]" />
			<flow-ref doc:name="Reference to consume flow" doc:id="89f1ca1d-cc31-4094-84ba-1b1d9ea7930f" name="consume_flow" />
		</foreach>
	</flow>
	<flow name="POST_routing_config" doc:id="a9821d46-fb76-40a2-9ed9-a1b14b39110d" >
		<http:listener doc:name="/routing/config" doc:id="6023580d-be4b-425c-ab8e-3d96408447d3" config-ref="HTTP_Listener_config" path="/routing/config" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="65f52482-7a2a-49d6-b9e7-fbdad2eb608f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
read(payload,"application/json")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="routing_config" doc:id="dd538a39-39df-41a3-8957-7e89825eb17e" variableName="routing_config" />
		<mongo:find-one-and-update-document collectionName="routing" doc:name="Find one and update document" doc:id="6879b383-a720-4ac0-8f7f-3643b214fbaa" config-ref="MongoDB_Config" upsert="true">
			<mongo:find-query ><![CDATA[#[{
	userId: payload.userId,
	configName: payload.configName
}]]]></mongo:find-query>
			<mongo:content-to-update ><![CDATA[#[payload]]]></mongo:content-to-update>
		</mongo:find-one-and-update-document>
	</flow>
	<flow name="GET_routing_config_configName" doc:id="cc47539c-9fa2-4934-b9f4-b20c061c9b1b" >
		<http:listener doc:name="/routing/config/{configName}" doc:id="b41294af-96ce-4247-b6fa-1259bb0abbf8" config-ref="HTTP_Listener_config" path="/routing/config/{configName}" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Form Data to JSON Document" doc:id="34017931-c3c3-480e-a1ba-1a1b0c2b002e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"userId": "jack",
	"configName": attributes.uriParams.configName
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-one-document collectionName="routing" doc:name="Find one document" doc:id="5411db06-1648-4718-b094-5c6d7cfb077c" config-ref="MongoDB_Config">
			<mongo:find-query ><![CDATA[#[{
	configName: payload.configName,
	userId: payload.userId
}]]]></mongo:find-query>
		</mongo:find-one-document>
	</flow>
	<flow name="GET_routing_configs" doc:id="d8edfb15-5101-4c3f-939a-29d218fc5ee1" >
		<http:listener doc:name="/routing/configs" doc:id="fea762c1-4fd1-46c8-9f50-4e6dbc9d3783" config-ref="HTTP_Listener_config" path="/routing/configs" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Form Data to JSON Document" doc:id="2001073b-9877-419f-8f6c-acd6efddcd52" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"userId": "jack",
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<mongo:find-documents collectionName="routing" doc:name="Find documents" doc:id="6b2ed2f6-af36-4b6b-9940-d858c0ce5cb2" config-ref="MongoDB_Config">
			<mongo:condition-query ><![CDATA[#[{
	userId: payload.userId
}]]]></mongo:condition-query>
		</mongo:find-documents>
	</flow>
	<flow name="createflowtestFlow" doc:id="a59daef6-6fd4-43ae-b168-454da607afb6" >
		<http:listener doc:name="Listener" doc:id="195c0878-603e-41ab-a2bd-1df650d442aa" config-ref="HTTP_Listener_config" path="/fdfa"/>
		<scripting:execute doc:name="Execute" doc:id="c407df50-e064-4a26-b56b-644918516982" engine="groovy">
		    <scripting:code><![CDATA[
		        flow = registry.lookupByName("connect").get();
                if (flow.isStarted())
                    flow.stop();
                else 
                    flow.start();
                
		    ]]></scripting:code>
		</scripting:execute>
		<ee:transform doc:name="OCAPI to CDM" doc:id="e1be74df-2a4e-4b53-9290-72bb9d681d3a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun getPrice(payload) = {
	Currency: payload.currency,
	UnitListPrice: payload.price
}


---
{
	Product: payload.data map (item, index) -> {
		"ProductSKU": item.id,
	    ("ProductLinks":item.product_links) if (item.product_links?),
        "Brand": item.brand,
        "PrimaryProductCategory":item.primary_category_id,
        "Title": item.page_title,
        "Name": item.name,
        "Price": getPrice(item),
        "Description": item.page_description,
        "ImageGroup": item.image_groups map (subGroup, index) -> {
        	(subGroup.images map (image, index) -> {
        		"ImageURL": image.link,
                "ImageTitle": image.title,
                "ImageViewType": subGroup.view_type,
                "ImageAlternateText": image.alt 
        	})
        },
        "IsPreOrderable": item.inventory.preorderable,
        "IsOrderable": item.inventory.orderable
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="CDM to Google Product" doc:id="93cea0a2-da77-4e8e-ba89-4d7787720637">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"entries": payload.Product map (product, index) -> {
		"batchId": index,
		"merchantId": vars.merchantId,
		"method": "insert",
		"product": {
			"id": product.ProductSKU,
			"offerId": product.ProductSKU,
			"title": product.Title,
			"contentLanguage": "en",
			"targetCountry": "US",
			"channel": "online",
			"price": {
				"value": product.Price.UnitListPrice default 100,
				"currency": product.Price.Currency default 'USD'
			},
			(if ( product.ImageGroup != null ) ("imageLink": product.ImageGroup[0].ImageURL)
                else "imageLink": "www.example.jpg"),
			(if ( product.ImageGroup != null ) ("additionalImageLinks": product.ImageGroup[1 to -1] map (image, index) -> image.ImageURL)
            	else {
			}),
			"description": product.Description,
			"brand": product.Brand,
			"availability": if ( product.IsOrderable == true ) "In Stock" else "Out of Stock"
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_CDM to Facebook Product" doc:id="18f9734d-e1ae-4ae0-967f-840367be0fea" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	// access token already acquired from oath flow
	"item_type": "PRODUCT_ITEM",
	"requests": payload.Product map (product, index) -> {
	    "method": "CREATE",
	    "retailer_id": product.ProductSKU,
        "data": {
            "availability": if ( product.IsOrderable == true ) "in stock" else "out of stock",
            "brand": product.Brand,
            "category": "t-shirts",
            "description": product.Description,
            (if ( product.ImageGroup != null ) ("image_url": product.ImageGroup[0].ImageURL)
                else "image_url": "www.example.jpg"),
            "name": product.Title,
            "price": (product.Price.UnitListPrice * 100 default 100) as String,
            "currency": product.Price.Currency default 'USD',
            "condition": "new",
            "url":"http://www.images.example.com/t-shirts/1.png"
        }
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="GET" doc:name="Request Consumer Connection Config" doc:id="26aa568a-2242-491d-ac1b-810d9bacafba" config-ref="HTTP_Request_configuration9" path="/connection/consumer/config/{consumerName}">
					<http:uri-params><![CDATA[#[output application/java
---
{
	"consumerName" : vars.consumerName
}]]]></http:uri-params>
				</http:request>
		<http:request method="GET" doc:name="Request producer connection config" doc:id="209abddd-b9a5-4548-90d4-4e9bc2af7ae0" config-ref="HTTP_Request_configuration9" path="/connection/producer/config/{producerName}">
					<http:uri-params><![CDATA[#[output application/java
---
{
	"producerName" : vars.producerName
}]]]></http:uri-params>
				</http:request>
		<set-variable value="#[payload]" doc:name="connection_config_producer" doc:id="910d50be-075b-4f76-91f0-949a90c870ea" variableName="connection_config_producer" />
		<set-variable value="#[payload]" doc:name="connection_config_consumer" doc:id="9223d845-3367-41f2-833f-033113e50f85" variableName="connection_config_consumer" />
		<choice doc:name="Choice" doc:id="da5b698c-d11a-45a2-8485-bddc86eb2373">
			<when expression="vars.routing_config.consumer.name == 'facebook'">
				<http:request method="POST" doc:name="Facebook Connector" doc:id="a93e3c0a-f1b1-4fc4-aa2c-04196bee9ec5" config-ref="HTTP_Request_configuration7" url="https://graph.facebook.com:443/v7.0/689293501912943/batch">
					<http:body><![CDATA[#[vars.product_data]]]></http:body>
			<http:query-params><![CDATA[#[output application/java
---
{
	"Key" : "AIzaSyCXpGcOJPaq573UuArs7z_0okzYO3A"
}]]]></http:query-params>
				</http:request>
			</when>
			<otherwise>
				<http:request method="POST" doc:name="Google Connector" doc:id="95b6eff9-0532-4c25-9541-dae84f2ce1fb" config-ref="HTTP_Request_configuration8" url="https://www.googleapis.com/content/v2.1/products/batch">
					<http:body><![CDATA[#[vars.product_data]]]></http:body>
					<http:query-params><![CDATA[#[output application/java
---
{
	"Key" : "AIzaSyCXpGcOJPaq573UuArs7z_0okzYO3A"
}]]]></http:query-params>
				</http:request>
			</otherwise>
		</choice>
	</flow>
</mule>
